[{"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\index.js":"1","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\App.js":"2","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productListitem.js":"4","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productListItem.js":"5","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productSection.js":"6","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\Modal.js":"7","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\apiURL.js":"8","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\navbar.js":"9","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\errorResponse.js":"10","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\successResponse.js":"11","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\modalResponse.js":"12","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\modal.js":"13","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\register.js":"14","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productSheet.js":"15","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\home.js":"16","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\signup.js":"17","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\signin.js":"18","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\authToken.js":"19","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\user.js":"20","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\userListItem.js":"21","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\userSheet.js":"22","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestsSection.js":"23","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestsListItem.js":"24","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestSheet.js":"25","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\commentsListItem.js":"26","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\stockSection.js":"27","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\stockListItem.js":"28","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\itemSheet.js":"29","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\privateRoute.js":"30","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\formatDate.js":"31","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\contact.js":"32"},{"size":517,"mtime":1618264421617,"results":"33","hashOfConfig":"34"},{"size":4282,"mtime":1620146886208,"results":"35","hashOfConfig":"34"},{"size":375,"mtime":1618264421621,"results":"36","hashOfConfig":"34"},{"size":563,"mtime":1616859780491,"results":"37","hashOfConfig":"34"},{"size":836,"mtime":1619707512370,"results":"38","hashOfConfig":"34"},{"size":11941,"mtime":1620129887004,"results":"39","hashOfConfig":"34"},{"size":1048,"mtime":1617117118563,"results":"40","hashOfConfig":"34"},{"size":130,"mtime":1620242053745,"results":"41","hashOfConfig":"34"},{"size":704,"mtime":1620146582096,"results":"42","hashOfConfig":"34"},{"size":325,"mtime":1619709021567,"results":"43","hashOfConfig":"34"},{"size":240,"mtime":1618264421568,"results":"44","hashOfConfig":"34"},{"size":880,"mtime":1619717257375,"results":"45","hashOfConfig":"34"},{"size":973,"mtime":1619707443732,"results":"46","hashOfConfig":"34"},{"size":559,"mtime":1619792940935,"results":"47","hashOfConfig":"34"},{"size":9436,"mtime":1620123596962,"results":"48","hashOfConfig":"34"},{"size":1044,"mtime":1620146907315,"results":"49","hashOfConfig":"34"},{"size":4946,"mtime":1619795763303,"results":"50","hashOfConfig":"34"},{"size":5308,"mtime":1620212330005,"results":"51","hashOfConfig":"34"},{"size":335,"mtime":1620123671348,"results":"52","hashOfConfig":"34"},{"size":7237,"mtime":1620122142240,"results":"53","hashOfConfig":"34"},{"size":554,"mtime":1620146927473,"results":"54","hashOfConfig":"34"},{"size":1440,"mtime":1620146935885,"results":"55","hashOfConfig":"34"},{"size":4112,"mtime":1620121823348,"results":"56","hashOfConfig":"34"},{"size":1887,"mtime":1620122991286,"results":"57","hashOfConfig":"34"},{"size":14318,"mtime":1620122887220,"results":"58","hashOfConfig":"34"},{"size":1590,"mtime":1619711171940,"results":"59","hashOfConfig":"34"},{"size":7150,"mtime":1620121929080,"results":"60","hashOfConfig":"34"},{"size":1455,"mtime":1620146619394,"results":"61","hashOfConfig":"34"},{"size":14445,"mtime":1620207449815,"results":"62","hashOfConfig":"34"},{"size":415,"mtime":1618264421624,"results":"63","hashOfConfig":"34"},{"size":1057,"mtime":1619711805147,"results":"64","hashOfConfig":"34"},{"size":514,"mtime":1619794053835,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ha38ab",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"138","usedDeprecatedRules":"68"},"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\index.js",[],["139","140"],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\App.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productListitem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productListItem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productSection.js",["141","142"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\"\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport ProductListItem from './productListItem'\r\nimport apiURL from '../services/apiURL'\r\nimport { PromiseProvider } from 'mongoose';\r\n\r\nfunction ProductSection(props){\r\n\r\n    // VENTANAS MODALES\r\n    const searchModalRef = React.useRef();\r\n    const addModalRef = React.useRef();\r\n    const responseModalRef = React.useRef();\r\n    const openSearchModal = () => {\r\n        searchModalRef.current.openModal()\r\n    };\r\n    const openAddModal = () => {\r\n        addModalRef.current.openModal()\r\n    };\r\n    const openResponseModal = () => {\r\n        responseModalRef.current.openModal()\r\n    };\r\n    const closeSearchModal = () => {\r\n        setInputValue({\r\n            byname: \"\",\r\n            bycatn: \"\",\r\n            byrefn:\"\"\r\n        })\r\n        searchModalRef.current.closeModal()\r\n    };\r\n    const closeAddModal = () => {\r\n        setAddInputValue({\r\n            catalog_number: \"\",\r\n            name: \"\",\r\n            trading_house : \"\",\r\n            reference_number: \"\",\r\n            price : \"\",\r\n            information : \"\"\r\n        })\r\n        addModalRef.current.closeModal()\r\n    };\r\n    const closeResponseModal = () => {\r\n        setResponse({\r\n            error: false,\r\n            success: false,\r\n            msg: \"\"\r\n        })\r\n        responseModalRef.current.closeModal()\r\n    };\r\n\r\n    //ESTADOS\r\n    const [loading, setLoading] = useState(true)\r\n    const [data, setData] = useState([\"\"])\r\n    const [dataFiltered, setDataFiltered] = useState([data])\r\n    const [inputValue, setInputValue] = useState({\r\n        byname: \"\",\r\n        bycatn: \"\",\r\n        byrefn:\"\"\r\n    })\r\n    const [response, setResponse] = useState({\r\n        success: false,\r\n        error: false,\r\n        msg: \"\"\r\n    })\r\n    const [addInputValue, setAddInputValue] = useState({\r\n        catalog_number: \"\",\r\n        name: \"\",\r\n        trading_house : \"\",\r\n        reference_number: \"\",\r\n        price : \"\",\r\n        information : \"\"\r\n    })\r\n\r\n    //CONSIGUIENDO LA DATA DE PRODUCTOS DESDE DB\r\n    async function getData() {\r\n        const dataBase = await axios.get(`${apiURL}product/`);\r\n        if (dataBase.data.msg) { \r\n            return\r\n        } else {\r\n        setLoading(false)\r\n        setData(dataBase.data)\r\n        setDataFiltered(dataBase.data)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    },[])\r\n\r\n    //FILTRANDO LA DATA\r\n    const handletTypeInputChange = (event) => {\r\n        setInputValue({\r\n            ...inputValue,\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n    const searchByName = (event) => {\r\n        event.preventDefault();\r\n        const name = inputValue.byname;\r\n        setDataFiltered(data.filter(product => product.name.toLowerCase().includes(name)));\r\n        document.getElementById(\"select\").value = \"Type\"\r\n        closeSearchModal()\r\n    }\r\n    const searchByCatN = (event) => {\r\n        event.preventDefault();\r\n        const catN = String(inputValue.bycatn);\r\n        setDataFiltered(data.filter(product => String(product.catalog_number).includes(catN)));\r\n        document.getElementById(\"select\").value = \"Type\"\r\n        closeSearchModal()\r\n    }\r\n    const searchByRefN = (event) => {\r\n        event.preventDefault();\r\n        const refN = inputValue.byrefn;\r\n        setDataFiltered(data.filter(product => product.reference_number.toLowerCase().includes(refN)));\r\n        document.getElementById(\"select\").value = \"Type\"\r\n        closeSearchModal()\r\n    }\r\n    const searchByType = (event) => {\r\n        const type = event.target.value;\r\n        if (type === \"All\") {\r\n            setDataFiltered(data)\r\n        } else {\r\n            setDataFiltered(data.filter(product => product.type === type))\r\n        }\r\n    }\r\n    \r\n    //AÑADIENDO NUEVO PRODUCTO\r\n    const handleAddInputChange = (event) => {\r\n        const value = !isNaN(event.target.value) ? parseFloat(event.target.value) : event.target.value\r\n        setAddInputValue({\r\n            ...addInputValue,\r\n            [event.target.name] : value\r\n        })\r\n    }\r\n    const addNewProduct = () => {\r\n        axios.post(`${apiURL}product/newproduct`, {...addInputValue})\r\n        .then(res => {\r\n            setResponse({...response,\r\n                success: true,\r\n                msg: `${res.data.name} has been added to the product list!`\r\n            })\r\n            openResponseModal()\r\n            closeAddModal()\r\n            getData()\r\n        })\r\n        .catch(error => {\r\n            setResponse({...response,\r\n                error: true,\r\n                msg: error.response.data\r\n            })\r\n            openResponseModal()\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"gridSection grid\">\r\n            <div className=\"filter\">\r\n                <select id=\"select\" name=\"bytype\" onClick={searchByType}>\r\n                    <option >Type</option>\r\n                    <option defaultValue=\"All\">All</option>\r\n                    <option value=\"enzime\">Enzimes</option>\r\n                    <option value=\"cleaning\">Cleaning</option>\r\n                    <option value=\"consumables\">Consumables</option>\r\n                    <option value=\"laboratory\">laboratory</option>\r\n                    <option value=\"garment\">Garments</option>\r\n                    <option value=\"stationery\">Stationery</option>\r\n                    <option value=\"plastic\">Plastics</option>\r\n                    <option value=\"chemical\">Chemicals</option>\r\n                    <option value=\"glass\">Glass</option>\r\n                    <option value=\"other\">Others</option>\r\n                    <option value=\"added\">Added</option>\r\n                </select>\r\n                <button className=\"button1\"onClick={openSearchModal}>Advanced Search</button>\r\n            </div>\r\n            <div className=\"list\">\r\n                {loading ? \r\n                <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                :\r\n                dataFiltered.map((item, index) => {\r\n                    return <ProductListItem product={item} localState={dataFiltered} key={index} />\r\n                })\r\n                }\r\n            </div>\r\n            <button className=\"button1 addProductBtn\" onClick={openAddModal}>Add new product</button>\r\n            <Modal ref={searchModalRef}>\r\n                    <div className=\"modalHead\">\r\n                        <h1>Advanced search</h1>\r\n                        <button className=\"closeButton\"onClick={closeSearchModal}><b>X</b></button>\r\n                    </div>\r\n                        <form className=\"form modalForm modalFormSearch\">\r\n                            <div className=\"searchModalInput\">\r\n                                <div>\r\n                                    <label htmlFor=\"byname\">Search by product name</label>\r\n                                    <input type=\"text\" name=\"byname\" placeholder=\"Product name\" onChange={handletTypeInputChange}/>\r\n                                </div>\r\n                                <button className=\"button1\" onClick={searchByName}>Search</button>\r\n                            </div>\r\n                            <div className=\"searchModalInput\">\r\n                                <div>\r\n                                    <label htmlFor=\"bycatn\">Search by catalog number </label>\r\n                                    <input type=\"text\" name=\"bycatn\" placeholder=\"Catalog number\" onChange={handletTypeInputChange}/>\r\n                                </div>\r\n                                <button className=\"button1\" onClick={searchByCatN}>Search</button>\r\n                            </div>\r\n                            <div className=\"searchModalInput\">\r\n                                <div>\r\n                                    <label htmlFor=\"byrefn\">Search by reference number </label>\r\n                                    <input type=\"text\" name=\"byrefn\" placeholder=\"Reference number\" onChange={handletTypeInputChange}/>\r\n                                </div>\r\n                                <button className=\"button1\" onClick={searchByRefN}>Search</button>\r\n                            </div>\r\n                        </form>\r\n            </Modal>\r\n            <Modal ref={addModalRef}>\r\n                <div className=\"modal\">\r\n                    <div className=\"modalHead\">\r\n                        <h1>Add new product</h1>\r\n                        <button className=\"closeButton\" onClick={closeAddModal}>X</button>\r\n                    </div>\r\n                    <form className=\"form modalForm modalFormAdd\">\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"catalog_number\">*Catalog number</label>\r\n                            <input type=\"text\" name=\"catalog_number\" placeholder=\"Catalog number\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"name\">*Product name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Product name\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"trading_house\">Trading house</label>\r\n                            <input type=\"text\" name=\"trading_house\" placeholder=\"Trading house\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"reference_number\">Reference number</label>\r\n                            <input type=\"text\" name=\"reference_number\" placeholder=\"Reference number\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"price\">*Price</label>\r\n                            <input type=\"text\" name=\"price\" placeholder=\"Price\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                        <div className=\"flex-column\">\r\n                            <label htmlFor=\"information\">Product information</label>\r\n                            <input type=\"text\" name=\"information\" placeholder=\"Information\" onChange={handleAddInputChange}/>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"addButtonDiv\" ><button className=\"button1  addModalButton\" onClick={addNewProduct}><h2>Add product to the list</h2></button></div>\r\n                </div>\r\n            </Modal>\r\n            {response.success === true && \r\n                <ModalResponse ref={responseModalRef} response=\"true\">\r\n                    <div className=\"modalResponse\">\r\n                        <SuccessResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            {response.error === true && \r\n                <ModalResponse ref={responseModalRef}>\r\n                    <div className=\"modalResponse\">\r\n                        <ErrorResponse />\r\n                        <p><b>{response.msg.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductSection","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\Modal.js",["143"],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\apiURL.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\navbar.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\errorResponse.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\successResponse.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\modalResponse.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\modal.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\register.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\productSheet.js",["144"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport { Link, withRouter} from 'react-router-dom'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\";\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport apiURL from '../services/apiURL'\r\n\r\nfunction ProductSheet(props) {\r\n\r\n    // VENTANAS MODALES\r\n    const edditModalRef = React.useRef();\r\n    const requestModalRef = React.useRef();\r\n    const responseModalRef = React.useRef();\r\n    const confirmModalRef = React.useRef();\r\n    const openEdditModal = () => {\r\n        edditModalRef.current.openModal()\r\n    };\r\n    const openRequestModal = () => {\r\n        requestModalRef.current.openModal()\r\n    };\r\n    const openResponseModal = () => {\r\n        responseModalRef.current.openModal()\r\n    };\r\n    const openConfirmModal = () => {\r\n        confirmModalRef.current.openModal()\r\n    }\r\n    const closeEdditModal = () => {\r\n        edditModalRef.current.closeModal()\r\n    };\r\n    const closeRequestModal = () => {\r\n        requestModalRef.current.closeModal()\r\n        setAmountInputValue({amount:\"\"})\r\n    };\r\n    const closeResponseModal = () => {\r\n        response.delete === true && props.history.push(\"/products\")\r\n        response.success === true && closeRequestModal()\r\n        response.success === true && closeEdditModal()\r\n        closeConfirmModal()\r\n        setResponse({\r\n            error: false,\r\n            success: false,\r\n            delete: false,\r\n            msg: \"\"\r\n        })\r\n        responseModalRef.current.closeModal()\r\n    };\r\n    const closeConfirmModal = () => {\r\n        confirmModalRef.current.closeModal()\r\n    };\r\n\r\n    //ESTADOS\r\n    const [dataProduct, setDataProduct] = useState([])\r\n    const [change, setchange] = useState([])\r\n    const [edditInputValue, setEdditInputValue] = useState()\r\n    const [response, setResponse] = useState({\r\n        success: false,\r\n        error: false,\r\n        delete: false,\r\n        msg: \"\"\r\n    })\r\n    const [amountInputValue, setAmountInputValue] = useState({\r\n        amount: \"\"\r\n    })\r\n    \r\n    //CONSIGUIENDO LA DATA DEL PRODUCTO\r\n    const getData = () => {\r\n        axios.get(`${apiURL}product/${props.match.params.id}`)\r\n        .then(res => {\r\n            setDataProduct(res.data)\r\n        })\r\n        .catch(error => {\r\n            setResponse({\r\n                ...response,\r\n                error: true,\r\n                msg: \"Was a problem getting the data\"\r\n            })\r\n            openResponseModal()\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    },[change])\r\n\r\n    //CREANDO NUEVO PEDIDO\r\n    const handleAmountInputChange = (event) => {\r\n        const value = !isNaN(event.target.value) ? parseFloat(event.target.value) : event.target.value\r\n        setAmountInputValue({\r\n            ...amountInputValue,\r\n            [event.target.name] : value\r\n        })\r\n    }\r\n    const makeRequest = () => {\r\n        axios.post(`${apiURL}order/neworder/${dataProduct._id}`, {...amountInputValue})\r\n        .then(res => {\r\n            setResponse({...response,\r\n                success: true,\r\n                msg: `Product ${dataProduct.name} ordered `\r\n            })\r\n            setAmountInputValue({amount:\"\"})\r\n            openResponseModal()\r\n        })\r\n        .catch(error => {\r\n            setResponse({...response,\r\n                error: true,\r\n                msg: error.response.data.msg\r\n            })\r\n            openResponseModal()\r\n        });\r\n    }\r\n    \r\n    //EDITANDO PRODUCTO\r\n    const handletEdditInputChange = (event) => {\r\n        setEdditInputValue({\r\n            ...edditInputValue,\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n    const edditProduct = () => {\r\n        axios.put(`${apiURL}product/${dataProduct._id}/modify`, {...edditInputValue})\r\n        .then(res => {\r\n            setResponse({...response,\r\n                success: true,\r\n                msg: res.data.msg\r\n            })\r\n            openResponseModal()\r\n            setEdditInputValue()\r\n            setchange([])\r\n        })\r\n        .catch(error => {\r\n            setResponse({...response,\r\n                error: true,\r\n                msg: error.response.data.msg\r\n            })\r\n            openResponseModal()\r\n        });\r\n    }\r\n\r\n    //ELIMINANDO PRODUCTO\r\n    const deleteProduct = () => {\r\n        axios.delete(`${apiURL}product/deleteproduct/${dataProduct._id}`)\r\n        .then(res => {\r\n            setResponse({...response,\r\n                success: true,\r\n                delete: true,\r\n                msg: res.data.msg\r\n            })\r\n            // openDeleteResponseModal()\r\n            openResponseModal()\r\n        })\r\n        .catch(error => {\r\n            setResponse({...response,\r\n                error: true,\r\n                msg: error.response.data.msg\r\n            })\r\n            openResponseModal()\r\n        });\r\n    }\r\n    return(\r\n        <div className=\"gridSection\"> \r\n            <div className=\"back\">\r\n                <Link className=\"Link\" to=\"/products\">Back</Link>\r\n            </div>\r\n            <div className=\"sheetBody sheetBodyProduct\">\r\n                <div className=\"nameSheet\">\r\n                    <h1>{dataProduct.name}</h1>\r\n                </div>\r\n                <div className=\"sheetInfo\">\r\n                    <p><b>Catalog number: </b>{dataProduct.catalog_number}</p>\r\n                    <p><b>Type: </b>{dataProduct.type}</p>\r\n                    <p><b>Trading house: </b>{dataProduct.trading_house}</p>\r\n                    <p><b>Reference number: </b>{dataProduct.reference_number}</p>\r\n                    <p><b>Price: </b>{dataProduct.price}€</p>\r\n                    {dataProduct.information !== \"\" && <p><b>Information: </b>{dataProduct.information}</p>}\r\n                    <button className=\"button1 edditButton\" onClick={openEdditModal}>Edit this product</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"playground playgroundSheet\">\r\n                <button className=\"button1 requestButton\" onClick={openRequestModal}><h2>Make a request</h2></button>\r\n            </div>\r\n            <Modal ref={requestModalRef}>\r\n                <div className=\"modalHead\">\r\n                    <h1>Make a Request</h1>\r\n                    <button className=\"closeButton\" onClick={closeRequestModal}>X</button>\r\n                </div>\r\n                <form className=\"form modalFormRequest\">\r\n                    <p align=\"center\"><b>¿How many unities would you like to request?</b></p>\r\n                    <div className=\"flex-column\">\r\n                        <label align=\"center\" htmlFor=\"amount\">Amount</label>\r\n                        <input type=\"text\" name=\"amount\" placeholder=\"Amount to request\" value={amountInputValue.amount} onChange={handleAmountInputChange}/>\r\n                    </div>\r\n                </form>\r\n                <button className=\"button1 requestButton\" onClick={makeRequest}><h2>OK!</h2></button>\r\n            </Modal>\r\n            <Modal ref={edditModalRef}>\r\n                <div className=\"modalHead\">\r\n                    <h1>Modify product</h1>\r\n                    <button className=\"closeButton\" onClick={closeEdditModal}>X</button>\r\n                </div>\r\n                <form className=\"form modalFormRequest\">\r\n                    <div className=\"flex-column\">\r\n                        <label htmlFor=\"information\">Information</label>\r\n                        <input type=\"text\" name=\"information\" placeholder=\"Write here\" onChange={handletEdditInputChange}/>\r\n                    </div>\r\n                </form>\r\n                <button className=\"button1 requestButton\" onClick={edditProduct}><h2>Save</h2></button>\r\n                <button className=\"deleteButton\"onClick={openConfirmModal}>Delete</button>\r\n            </Modal>\r\n            <ModalResponse ref={confirmModalRef} >\r\n                <div className=\"modalResponse\">\r\n                    <h1>Are you sure?</h1>\r\n                    <div className=\"yesNoButtons\">\r\n                        <button className=\"deleteButton\"onClick={deleteProduct}><b>Yes</b></button>\r\n                        <button className=\"deleteButton\"onClick={closeConfirmModal}><b>No</b></button>\r\n                    </div>\r\n                </div>\r\n            </ModalResponse>\r\n            {response.success === true && \r\n                <ModalResponse ref={responseModalRef} response=\"true\">\r\n                    <div className=\"modalResponse\">\r\n                        <SuccessResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            {response.error === true && \r\n                <ModalResponse ref={responseModalRef}>\r\n                    <div className=\"modalResponse\">\r\n                        <ErrorResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ProductSheet)","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\home.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\signup.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\signin.js",["145","146"],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\authToken.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\user.js",["147"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\";\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport apiURL from '../services/apiURL'\r\nimport UserListItem from './userListItem'\r\nimport setAuthToken from '../services/authToken'\r\n\r\nfunction User(props) {\r\n\r\n    // VENTANAS MODALES\r\n    const edditUserModalRef = React.useRef();\r\n    const responseModalRef = React.useRef();\r\n    const confirmModalRef = React.useRef();\r\n    const openEdditUserModal = () => {\r\n        edditUserModalRef.current.openModal()\r\n    };\r\n    const openResponseModal = () => {\r\n        responseModalRef.current.openModal()\r\n    };\r\n    const openConfirmModal = () => {\r\n        confirmModalRef.current.openModal()\r\n    }\r\n    const closeEdditUserModal = () => {\r\n        setEdditUserInputValue({})\r\n        edditUserModalRef.current.closeModal()\r\n    };\r\n    const closeResponseModal = () => {\r\n        response.success === true && closeEdditUserModal()\r\n        setResponse({\r\n            error: false,\r\n            success: false,\r\n            msg: \"\"\r\n        })\r\n        responseModalRef.current.closeModal()\r\n    };\r\n    const closeConfirmModal = () => {\r\n        confirmModalRef.current.closeModal()\r\n    };\r\n\r\n    //ESTADOS\r\n    const [data, setData] = useState([])\r\n    const [edditUserInputValue, setEdditUserInputValue] = useState({})\r\n    const [response, setResponse] = useState({\r\n        success: false,\r\n        error: false,\r\n        msg: \"\"\r\n    })\r\n\r\n    //MODIFICANDO USUARIO\r\n    const handleEdditUserInputChange = (event) => {\r\n        setEdditUserInputValue({\r\n            ...edditUserInputValue,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    const edditUser = (event) => {\r\n        axios.put(`${apiURL}user/modify`, { ...edditUserInputValue })\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: `User information modified.`\r\n                })\r\n                openResponseModal()\r\n                props.handlerUser(res.data)\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    //DELETE USER\r\n    const deleteUser = () => {\r\n        axios.delete(`${apiURL}user/deleteuser`)\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: res.data.msg\r\n                })\r\n                // openResponseModal()\r\n                props.history.push('/signin')\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    //LOG OUT\r\n    const logout = () => {\r\n        localStorage.removeItem(\"labToolUser\");\r\n        setAuthToken()\r\n        props.history.push('/signin')\r\n    }\r\n\r\n    //CONSIGUIENDO LA DATA DE USUARIOS PARA LISTA DE USUARIOS\r\n    async function getData() {\r\n        const dataBase = await axios.get(`${apiURL}user/`);\r\n        setData(dataBase.data)\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"gridSection\">\r\n            <div className=\"sheetBodyUser\">\r\n                <div className=\"userName\">\r\n                    <h1>{props.user.fullname}</h1>\r\n                </div>\r\n                <div className=\"sheetInfo requestInfo\">\r\n                    <p><b>E-mail: </b>{props.user.email}</p>\r\n                    <p><b>Position: </b>{props.user.position}</p>\r\n                    <p><b>Rol: </b>{props.user.rol}</p>\r\n                    {props.user.email !== \"guestuser@labtool.com\" && <button className=\"button1 edditButton\" onClick={openEdditUserModal}>Modify user</button>}\r\n                </div>\r\n                <button className=\"spendButton logoutButton\" onClick={logout}><p><b>Log out</b></p></button>\r\n                <h2>Users</h2>\r\n                <div className=\"list usersList\">\r\n                    {data.map((item, index) => {\r\n                        return <UserListItem user={item} localState={data} key={index} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <Modal ref={edditUserModalRef}>\r\n                <div className=\"modalHead\">\r\n                    <h1>Modify user</h1>\r\n                    <button className=\"closeButton\" onClick={closeEdditUserModal}>X</button>\r\n                </div>\r\n                <form className=\"form modalFormRequest\">\r\n                    <div className=\"flex-column\">\r\n                        <label htmlFor=\"fullname\">New name</label>\r\n                        <input type=\"text\" name=\"fullname\" placeholder=\"New name\" onChange={handleEdditUserInputChange} />\r\n                    </div>\r\n                    <div className=\"flex-column\">\r\n                        <label htmlFor=\"position\">New position</label>\r\n                        <input type=\"text\" name=\"position\" placeholder=\"Position\" onChange={handleEdditUserInputChange} />\r\n                    </div>\r\n                </form>\r\n                <button className=\"button1 requestButton\" onClick={edditUser}><h2>Save</h2></button>\r\n                <button className=\"deleteButton\" onClick={openConfirmModal}>Delete account</button>\r\n            </Modal>\r\n            {response.success === true &&\r\n                <ModalResponse ref={responseModalRef} response=\"true\">\r\n                    <div className=\"modalResponse\">\r\n                        <SuccessResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            {response.error === true &&\r\n                <ModalResponse ref={responseModalRef}>\r\n                    <div className=\"modalResponse\">\r\n                        <ErrorResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            <ModalResponse ref={confirmModalRef}>\r\n                <div className=\"modalResponse\">\r\n                    <h1>Are you sure?</h1>\r\n                    <div className=\"yesNoButtons\">\r\n                        <button className=\"deleteButton\" onClick={deleteUser}>Yes</button>\r\n                        <button className=\"deleteButton\" onClick={closeConfirmModal}>No</button>\r\n                    </div>\r\n                </div>\r\n            </ModalResponse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\userListItem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\userSheet.js",["148"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport apiURL from '../services/apiURL'\r\nimport { useState, useEffect } from 'react'\r\n\r\nfunction UserSheet(props) {\r\n    // const user = props.location.data.user\r\n    const [data, setData] = useState({})\r\n\r\n    //CONSIGUIENDO LA DATA DE USUARIO\r\n    async function getData() {\r\n        const dataBase = await axios.get(`${apiURL}user/${props.match.params.id}`);\r\n        setData(dataBase.data)\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"gridSection\"> \r\n            <div className=\"back\">\r\n                <Link className=\"Link\" to=\"/users\">Back</Link>\r\n            </div>\r\n            <div className=\"sheetBody\">\r\n                <div className=\"sheetRequestName\">\r\n                    <h1>{data.fullname}</h1>\r\n                </div>\r\n                <div className=\"sheetInfo\">\r\n                    <p>E-mail: {data.email}</p>\r\n                    <p>Position: {data.position}</p>\r\n                    <p>Rol: {data.rol}</p>\r\n                </div>\r\n                {/* <label for=\"toggle\" class=\"\"></label>\r\n                <input type=\"checkbox\" />\r\n                <span class=\"slider round\"></span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default UserSheet","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestsSection.js",["149"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport apiURL from '../services/apiURL'\r\nimport RequestsListItem from './requestsListItem'\r\n\r\nfunction RequestsSection(props) {\r\n\r\n    //ESTADOS\r\n    const [loading, setLoading] = useState(true)\r\n    const [dataNewRequests, setDataNewRequests] = useState([])\r\n    const [dataValidatedRequests, setdataValidatedRequests] = useState([])\r\n    const [dataReceivedRequests, setdataReceivedRequests] = useState([])\r\n    const [dataAllRequests, setdataAllRequests] = useState([])\r\n    const [selectedList, setSelectedList] = useState({\r\n        new: true\r\n    })\r\n\r\n    //CONSIGUIENDO LAS DATAS DE PEDIDOS SEGÚN ESTADO DESDE DB\r\n    async function getData() {\r\n        //waiting\r\n        const dataNew = await axios.get(`${apiURL}order/waiting`);\r\n        setDataNewRequests(dataNew.data)\r\n        \r\n        //validated\r\n        const dataValidated = await axios.get(`${apiURL}order/validated`);\r\n        setdataValidatedRequests(dataValidated.data)\r\n\r\n        //received\r\n        const dataReceived = await axios.get(`${apiURL}order/received`);\r\n        setdataReceivedRequests(dataReceived.data)\r\n\r\n        //all\r\n        const dataAll = await axios.get(`${apiURL}order/`);\r\n        setdataAllRequests(dataAll.data)\r\n        setLoading(false)\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"gridSection grid\">\r\n            <div className=\"selectVar filter\">\r\n                <input type=\"radio\" id=\"radioNew\" name=\"radioVar\" value=\"new\" onClick={() => setSelectedList({new : true})} defaultChecked/>\r\n                <label htmlFor=\"radioNew\"><b>New</b></label>\r\n                <input type=\"radio\" id=\"radioValidate\" name=\"radioVar\" value=\"validated\" onClick={() => setSelectedList({validated : true})} />\r\n                <label htmlFor=\"radioValidate\"><b>Validated</b></label>\r\n                <input type=\"radio\" id=\"radioReceived\" name=\"radioVar\" value=\"received\" onClick={() => setSelectedList({received : true})} />\r\n                <label htmlFor=\"radioReceived\"><b>Received</b></label>\r\n                <input type=\"radio\" id=\"radioAll\" name=\"radioVar\" value=\"all\" onClick={() => setSelectedList({all : true})} />\r\n                <label htmlFor=\"radioAll\"><b>All</b></label>\r\n            </div>\r\n            <div className=\"list\">\r\n                {loading ? \r\n                <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                :\r\n                selectedList.new === true && dataNewRequests.length > 0 ? \r\n                    dataNewRequests.reverse().map((item, index) => {\r\n                        return <RequestsListItem order={item} key={index} />\r\n                    })\r\n                :\r\n                selectedList.validated === true && dataValidatedRequests.length > 0 ? \r\n                    dataValidatedRequests.map((item, index) => {\r\n                        return <RequestsListItem order={item} key={index} />\r\n                    })\r\n                :\r\n                selectedList.received === true && dataReceivedRequests.length > 0 ?\r\n                    dataReceivedRequests.map((item, index) => {\r\n                        return <RequestsListItem order={item} key={index} />\r\n                    })\r\n                :\r\n                selectedList.all === true && dataAllRequests.length > 0 ?\r\n                    dataAllRequests.map((item, index) => {\r\n                        return <RequestsListItem order={item} key={index} />\r\n                    })\r\n                : <p align=\"center\">There is no request</p>\r\n                }\r\n            </div>\r\n            <div className=\"addProductBtn\">\r\n                <Link className=\"Link\" to=\"/products\"><b>+ Add new request</b></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsSection","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestsListItem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\requestSheet.js",["150","151"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\";\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport apiURL from '../services/apiURL'\r\nimport CommentsListItem from './commentsListItem'\r\nimport formatDate from '../services/formatDate'\r\n\r\nfunction RequestSheet(props) {\r\n\r\n    // VENTANAS MODALES\r\n    const productModalRef = React.useRef();\r\n    const addCommentModalRef = React.useRef();\r\n    const responseModalRef = React.useRef();\r\n    const confirmRejectModalRef = React.useRef();\r\n    const confirmModalRef = React.useRef();\r\n    const openProductModal = () => {\r\n        productModalRef.current.openModal()\r\n    };\r\n    const openAddCommentModal = () => {\r\n        addCommentModalRef.current.openModal()\r\n    };\r\n    const openResponseModal = () => {\r\n        responseModalRef.current.openModal()\r\n    };\r\n    const openConfirmRejectModal = () => {\r\n        confirmRejectModalRef.current.openModal()\r\n    }\r\n    const openConfirmModal = () => {\r\n        confirmModalRef.current.openModal()\r\n    }\r\n    const closeProductModal = () => {\r\n        productModalRef.current.closeModal()\r\n    };\r\n    const closeAddCommentModal = () => {\r\n        addCommentModalRef.current.closeModal()\r\n        setCommentInputValue({ text: \"\" })\r\n    };\r\n    const closeResponseModal = () => {\r\n        response.delete === true && props.history.push(\"/requests\")\r\n        response.success === true && closeAddCommentModal()\r\n        closeConfirmModal()\r\n        closeConfirmRejectModal()\r\n        setResponse({\r\n            error: false,\r\n            success: false,\r\n            delete: false,\r\n            msg: \"\"\r\n        })\r\n        responseModalRef.current.closeModal()\r\n    };\r\n    const closeConfirmRejectModal = () => {\r\n        confirmRejectModalRef.current.closeModal()\r\n    };\r\n    const closeConfirmModal = () => {\r\n        confirmModalRef.current.closeModal()\r\n    };\r\n\r\n    //ESTADOS\r\n    const [change, setchange] = useState([])\r\n    const [commentsData, setCommentsData] = useState([])\r\n    const [dataRequest, setDataRequest] = useState({\r\n        _id: \"\",\r\n        product: \"\",\r\n        amount: \"\",\r\n        user: \"\",\r\n        status: \"\",\r\n        date: \"\"\r\n    })\r\n    const [response, setResponse] = useState({\r\n        success: false,\r\n        error: false,\r\n        delete: false,\r\n        msg: \"\"\r\n    })\r\n    const [commentInputValue, setCommentInputValue] = useState({\r\n        text: \"\"\r\n    })\r\n\r\n    //CONSIGUIENDO LA DATA DEL PEDIDO\r\n    const getData = () => {\r\n        axios.get(`${apiURL}order/${props.match.params.id}`)\r\n            .then(res => {\r\n                setDataRequest(res.data)\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: \"Was a problem getting the data\"\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    }, [change])\r\n\r\n    //DELETE PEDIDO\r\n    const deleteRequest = () => {\r\n        axios.delete(`${apiURL}order/deleteorder/${dataRequest._id}`)\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    delete: true,\r\n                    msg: res.data.msg\r\n                })\r\n                openResponseModal()\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    // CONSIGUIENDO LA DATA DE MENSAJE\r\n    async function getCommentsData() {\r\n        const dataBase = await axios.get(`${apiURL}comment/${props.match.params.id}`);\r\n        setCommentsData(dataBase.data)\r\n    }\r\n    useEffect(() => {\r\n        getCommentsData()\r\n    }, [])\r\n\r\n    //VALIDANDO UN PEDIDO\r\n    const validateRequest = () => {\r\n        axios.put(`${apiURL}order//validate/${props.match.params.id}`)\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: res.data.msg\r\n                })\r\n                openResponseModal()\r\n                setchange([])\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    //RECHAZANDO UN PEDIDO\r\n    const rejectRequest = () => {\r\n        axios.put(`${apiURL}order/reject/${props.match.params.id}`)\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: res.data.msg\r\n                })\r\n                openResponseModal()\r\n                setchange([])\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    //ENVIANDO COMENTARIO\r\n    const handleCommentInputChange = (event) => {\r\n        setCommentInputValue({\r\n            ...commentInputValue,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    const sendComment = () => {\r\n        axios.post(`${apiURL}comment/newcomment/${props.match.params.id}`, { ...commentInputValue })\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: `Comment sent`\r\n                })\r\n                openResponseModal()\r\n                getCommentsData()\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    //AÑADIENDO AL STOCK\r\n    const addToStock = () => {\r\n        axios.post(`${apiURL}stock/newitem/${props.match.params.id}`)\r\n            .then(res => {\r\n                setResponse({\r\n                    ...response,\r\n                    success: true,\r\n                    msg: res.data.msg\r\n                })\r\n                openResponseModal()\r\n                setchange([])\r\n            })\r\n            .catch(error => {\r\n                setResponse({\r\n                    ...response,\r\n                    error: true,\r\n                    msg: error.response.data.msg\r\n                })\r\n                openResponseModal()\r\n            });\r\n    }\r\n\r\n    const handleCommentChange = () => {\r\n        getCommentsData()\r\n    }\r\n\r\n    return (\r\n        <div className=\"gridSection\">\r\n            <div className=\"back\">\r\n                <Link className=\"Link\" to=\"/requests\">Back</Link>\r\n            </div>\r\n            <div className=\"sheetBody\">\r\n                <div className=\"sheetRequestName\">\r\n                    <h1>{(dataRequest.product != null) ? dataRequest.product.name : \"No product\"}</h1>\r\n                    <button className=\"button1 edditButton\" onClick={openProductModal}>Show product Sheet</button>\r\n                </div>\r\n                <div className=\"sheetInfo requestInfo\">\r\n                    <p><b>Amount to order: </b>{dataRequest.amount} unities</p>\r\n                    <p><b>Requested by: </b>{(dataRequest.user != null) ? dataRequest.user.fullname : \"No user\"}</p>\r\n                    <p><b>Date: </b>{dataRequest.date !== \"\" && formatDate(dataRequest.date)}</p>\r\n                    {(dataRequest.status === \"waiting\") && <p className=\"\" style={{ color: \"orange\" }}><b>Status: </b>{dataRequest.status}</p>}\r\n                    {(dataRequest.status === \"validated\") && <p className=\"\" style={{ color: \"green\" }}><b>Status: </b>{dataRequest.status}</p>}\r\n                    {(dataRequest.status === \"received\") && <p className=\"\" style={{ color: \"blue\" }}><b>Status: </b>{dataRequest.status}</p>}\r\n                    {(dataRequest.status === \"rejected\") && <p className=\"\" style={{ color: \"red\" }}><b>Status: </b>{dataRequest.status}</p>}\r\n                </div>\r\n                <h2>Comments</h2>\r\n                {(commentsData.length > 0) &&\r\n                    <div className=\"commentsList\">\r\n                        {commentsData.map((item, index) => {\r\n                            return <CommentsListItem comment={item} key={index} user={props.user} setchange={handleCommentChange} />\r\n                        })}\r\n                    </div>}\r\n                <div>\r\n                    <button className=\"button1 edditButton\" onClick={openAddCommentModal}>Add new comment</button>\r\n                </div>\r\n            </div>\r\n            {(dataRequest.status !== \"received\") &&\r\n                <div className=\"playground playgroundSheet\">\r\n                    <div className=\"validateButtons\">\r\n                        {dataRequest.status !== \"validated\" &&\r\n                            <button className=\"val-rejButton valButton\" onClick={validateRequest}><b>VALIDATE</b></button>\r\n                        }\r\n                        {dataRequest.status !== \"rejected\" &&\r\n                            <button className=\"val-rejButton rejButton\" onClick={openConfirmRejectModal}><b>REJECT</b></button>\r\n                        }\r\n                        {dataRequest.status === \"validated\" &&\r\n                            <button className=\"val-rejButton addStockButton\" onClick={addToStock}><p>Product arrived?</p><p><b>Add to stock</b></p></button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"deleteButtonDiv\">\r\n                <button className=\"deleteButton\" onClick={openConfirmModal}>Delete</button>\r\n            </div>\r\n            <Modal ref={productModalRef}>\r\n                <div className=\"Section\">\r\n                    <div className=\"modalHead\">\r\n                        <button className=\"closeButton\" onClick={closeProductModal}>X</button>\r\n                    </div>\r\n                    {dataRequest.product == null ? <div style={{ margin: \"20px\" }}><h1>No product</h1> </div> :\r\n                        <div className=\"sheetBody sheetBodyProduct\">\r\n                            <div>\r\n                                <h1>{dataRequest.product.name}</h1>\r\n                            </div>\r\n                            <div className=\"sheetInfo\">\r\n                                <p><b>Catalog number: </b>{dataRequest.product.catalog_number}</p>\r\n                                <p><b>Type: </b>{dataRequest.product.type}</p>\r\n                                <p><b>Trading house: </b>{dataRequest.product.trading_house}</p>\r\n                                <p><b>Reference number: </b>{dataRequest.product.reference_number}</p>\r\n                                <p><b>Price: </b>{dataRequest.product.price}€</p>\r\n                                <p><b>Information: {dataRequest.product.information}</b></p>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal>\r\n            <Modal ref={addCommentModalRef}>\r\n                <div className=\"modalHead\">\r\n                    <h1>Add a comment to the order request</h1>\r\n                    <button className=\"closeButton\" onClick={closeAddCommentModal}>X</button>\r\n                </div>\r\n                <form className=\"form modalFormRequest\">\r\n                    <div className=\"flex-column\">\r\n                        <label htmlFor=\"text\">Comment</label>\r\n                        <input type=\"text\" name=\"text\" placeholder=\"Write a comment\" onChange={handleCommentInputChange} />\r\n                    </div>\r\n                </form>\r\n                <button className=\"button1 requestButton\" onClick={sendComment}><h2>Send</h2></button>\r\n            </Modal>\r\n            {response.success === true &&\r\n                <ModalResponse ref={responseModalRef} response=\"true\">\r\n                    <div className=\"modalResponse\">\r\n                        <SuccessResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            {response.error === true &&\r\n                <ModalResponse ref={responseModalRef}>\r\n                    <div className=\"modalResponse\">\r\n                        <ErrorResponse />\r\n                        <p><b>{response.msg}</b></p>\r\n                        <button className=\"button1 sizeModalButton\" onClick={closeResponseModal}>Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            <ModalResponse ref={confirmRejectModalRef}>\r\n                <div className=\"modalResponse\">\r\n                    <h1>Are you sure?</h1>\r\n                    <div className=\"yesNoButtons\">\r\n                        <button className=\"deleteButton\" onClick={rejectRequest}>Yes</button>\r\n                        <button className=\"deleteButton\" onClick={closeConfirmRejectModal}>No</button>\r\n                    </div>\r\n                </div>\r\n            </ModalResponse>\r\n            <ModalResponse ref={confirmModalRef}>\r\n                <div className=\"modalResponse\">\r\n                    <h1>Are you sure?</h1>\r\n                    <div className=\"yesNoButtons\">\r\n                        <button className=\"deleteButton\" onClick={deleteRequest}>Yes</button>\r\n                        <button className=\"deleteButton\" onClick={closeConfirmModal}>No</button>\r\n                    </div>\r\n                </div>\r\n            </ModalResponse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RequestSheet)","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\commentsListItem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\stockSection.js",["152","153"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\"\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport StockListItem from './stockListItem'\r\nimport apiURL from '../services/apiURL'\r\n\r\nfunction StockSection(props){\r\n\r\n    // VENTANAS MODALES\r\n    // const searchModalRef = React.useRef();\r\n    const responseModalRef = React.useRef();\r\n    // const openSearchModal = () => {\r\n    //     searchModalRef.current.openModal()\r\n    // };\r\n    // const openResponseModal = () => {\r\n    //     responseModalRef.current.openModal()\r\n    // };\r\n    // const closeSearchModal = () => {\r\n    //     searchModalRef.current.closeModal()\r\n    // };\r\n    const closeResponseModal = () => {\r\n        setResponse({\r\n            error: false,\r\n            success: false,\r\n            msg: \"\"\r\n        })\r\n        responseModalRef.current.closeModal()\r\n    };\r\n\r\n    //ESTADOS\r\n    const [loading, setLoading] = useState(true)\r\n    const [data, setData] = useState([])\r\n    const [dataFiltered, setDataFiltered] = useState([])\r\n    const [response, setResponse] = useState({\r\n        success: false,\r\n        error: false,\r\n        msg: \"\"\r\n    })\r\n    \r\n    //CONSIGUIENDO LA DATA DE STOCK DESDE DB\r\n    async function getData() {\r\n        const dataBase = await axios.get(`${apiURL}stock/`);\r\n        setLoading(false)\r\n        setData(dataBase.data)\r\n        setDataFiltered(dataBase.data)\r\n    }\r\n    useEffect(() => {\r\n        let token = localStorage.getItem(\"labToolUser\");\r\n        props.autoLogin(token)\r\n        getData()\r\n    },[])\r\n\r\n    //FILTRANDO LA DATA\r\n    // const [inputValue, setInputValue] = useState({\r\n    //     byname: \"\",\r\n    //     bycatn: \"\",\r\n    //     byrefn:\"\"\r\n    // })\r\n    // const handletTypeInputChange = (event) => {\r\n    //     setInputValue({\r\n    //         ...inputValue,\r\n    //         [event.target.name] : event.target.value\r\n    //     })\r\n    // }\r\n    // const searchByName = (event) => {\r\n    //     event.preventDefault();\r\n    //     const name = inputValue.byname;\r\n    //     setDataFiltered(data.filter(item => item.name.toLowerCase().includes(name)));\r\n    //     closeSearchModal()\r\n    // }\r\n    // const searchByCatN = (event) => {\r\n    //     event.preventDefault();\r\n    //     const catN = String(inputValue.bycatn);\r\n    //     setDataFiltered(data.filter(item => String(item.catalog_number).includes(catN)));\r\n    //     closeSearchModal()\r\n    // }\r\n    // const searchByRefN = (event) => {\r\n    //     event.preventDefault();\r\n    //     const refN = inputValue.byrefn;\r\n    //     setDataFiltered(data.filter(item => item.reference_number.toLowerCase().includes(refN)));\r\n    //     closeSearchModal()\r\n    // }\r\n    // const searchByType = (event) => {\r\n    //     const type = event.target.value;\r\n    //     if (type === \"All\") {\r\n    //         setDataFiltered(data)\r\n    //     } else {\r\n    //         setDataFiltered(data.filter(item => item.type === type))\r\n    //     }\r\n    // }\r\n    \r\n    return (\r\n        <div className=\"gridSection grid\">\r\n            {/* FILTRADO DE STOCK. POR AHORA NO IMPLEMENTADO HASTA CONSEGUIR ACCEDER A PRODUCT DOC DESDE PRODUCT_ID DEL ITEM DOC (modificar estilo listStock para incluir el filtro)*/}\r\n            {/* <div className=\"filter\">\r\n                <select id=\"select\" name=\"bytype\" onClick={searchByType}>\r\n                    <option >Type</option>\r\n                    <option defaultValue=\"All\">All</option>\r\n                    <option value=\"enzime\">Enzimes</option>\r\n                    <option value=\"cleaning\">Cleaning</option>\r\n                    <option value=\"consumable\">Consumables</option>\r\n                    <option value=\"laboratory\">laboratory</option>\r\n                    <option value=\"garment\">Garments</option>\r\n                    <option value=\"stationery\">Stationery</option>\r\n                    <option value=\"plastic\">Plastics</option>\r\n                    <option value=\"chemical\">Chemicals</option>\r\n                    <option value=\"glass\">Glass</option>\r\n                    <option value=\"other\">Others</option>\r\n                    <option value=\"added\">Productos agregados</option>\r\n                </select>\r\n                <button className=\"button1\" onClick={openSearchModal}>Advanced Search</button>\r\n            </div> */}\r\n\r\n            <div className=\"listStock\">\r\n                {loading ? \r\n                    <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    : dataFiltered.length > 0 ?\r\n                    dataFiltered.map((item, index) => {\r\n                        return <StockListItem item={item} key={index} />\r\n                    })\r\n                    : <p align=\"center\">There is no item</p>\r\n                }\r\n            </div>\r\n            \r\n\r\n            {/* <Modal ref={searchModalRef}>\r\n                <div>\r\n                    <h1>Advanced search</h1>\r\n                    <button onClick={closeSearchModal}className=\"close\">Close</button>\r\n                </div>\r\n                <form className=\"form\">\r\n                    <div>\r\n                        <label htmlFor=\"byname\">Search by product name</label>\r\n                        <input type=\"text\" name=\"byname\" placeholder=\"Product name\" onChange={handletTypeInputChange}/>\r\n                    </div>\r\n                    <button onClick={searchByName}>Search</button>\r\n                    <div>\r\n                        <label htmlFor=\"bycatn\">Search by catalog number </label>\r\n                        <input type=\"text\" name=\"bycatn\" placeholder=\"Catalog number\" onChange={handletTypeInputChange}/>\r\n                    </div>\r\n                    <button onClick={searchByCatN}>Search</button>\r\n                    <div>\r\n                        <label htmlFor=\"byrefn\">Search by reference number </label>\r\n                        <input type=\"text\" name=\"byrefn\" placeholder=\"Reference number\" onChange={handletTypeInputChange}/>\r\n                    </div>\r\n                    <button onClick={searchByRefN}>Search</button>\r\n                </form>\r\n            </Modal> */}\r\n            {response.success === true && \r\n                <ModalResponse ref={responseModalRef} response=\"true\">\r\n                    <div>\r\n                        <SuccessResponse />\r\n                        <p>{response.msg}</p>\r\n                        <button onClick={closeResponseModal}className=\"close\">Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n            {response.error === true && \r\n                <ModalResponse ref={responseModalRef}>\r\n                    <div>\r\n                        <ErrorResponse />\r\n                        <p>{response.msg.msg}</p>\r\n                        <button onClick={closeResponseModal}className=\"close\">Close</button>\r\n                    </div>\r\n                </ModalResponse>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockSection","C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\stockListItem.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\itemSheet.js",["154"],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\privateRoute.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\services\\formatDate.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Let's_Coder\\project3\\my-app\\src\\components\\contact.js",["155","156","157"],"import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div className=\"contact productInfo\">\r\n            <a href=\"https://github.com/DiegoVaezman\" target=\"_blank\" className=\"contactImg\"><img src=\"../../img/GitHub-Logo.png\" alt=\"Github_img\"/></a>\r\n            <a href=\"https://vaezman.netlify.app/\" target=\"_blank\" className=\"contactImg\"><img src=\"../../img/portfolio_img.png\" alt=\"Portfolio_img\"/></a>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Contact",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":10,"column":10,"nodeType":"164","messageId":"165","endLine":10,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":93,"column":7,"nodeType":"168","endLine":93,"endColumn":9,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":87,"column":7,"nodeType":"168","endLine":87,"endColumn":15,"suggestions":"171"},{"ruleId":"162","severity":1,"message":"172","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"174","line":114,"column":69,"nodeType":"175","endLine":114,"endColumn":150},{"ruleId":"166","severity":1,"message":"167","line":119,"column":8,"nodeType":"168","endLine":119,"endColumn":10,"suggestions":"176"},{"ruleId":"166","severity":1,"message":"170","line":20,"column":8,"nodeType":"168","endLine":20,"endColumn":10,"suggestions":"177"},{"ruleId":"166","severity":1,"message":"167","line":43,"column":7,"nodeType":"168","endLine":43,"endColumn":9,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"170","line":103,"column":8,"nodeType":"168","endLine":103,"endColumn":16,"suggestions":"179"},{"ruleId":"166","severity":1,"message":"180","line":134,"column":8,"nodeType":"168","endLine":134,"endColumn":10,"suggestions":"181"},{"ruleId":"162","severity":1,"message":"182","line":35,"column":12,"nodeType":"164","messageId":"165","endLine":35,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":54,"column":7,"nodeType":"168","endLine":54,"endColumn":9,"suggestions":"183"},{"ruleId":"166","severity":1,"message":"170","line":111,"column":8,"nodeType":"168","endLine":111,"endColumn":16,"suggestions":"184"},{"ruleId":"162","severity":1,"message":"185","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"187","line":7,"column":13,"nodeType":"175","messageId":"188","endLine":7,"endColumn":94,"fix":"189"},{"ruleId":"186","severity":1,"message":"187","line":8,"column":13,"nodeType":"175","messageId":"188","endLine":8,"endColumn":91,"fix":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'PromiseProvider' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'getData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["194"],"'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["195"],["196"],["197"],["198"],"React Hook useEffect has a missing dependency: 'getCommentsData'. Either include it or remove the dependency array.",["199"],"'data' is assigned a value but never used.",["200"],["201"],"'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"202","text":"203"},{"range":"204","text":"203"},"no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"205","fix":"209"},{"desc":"210","fix":"211"},{"desc":"205","fix":"212"},{"desc":"207","fix":"213"},{"desc":"214","fix":"215"},{"desc":"205","fix":"216"},{"desc":"207","fix":"217"},[244,244]," rel=\"noreferrer\"",[395,395],"Update the dependencies array to be: [props]",{"range":"218","text":"219"},"Update the dependencies array to be: [change, getData, props]",{"range":"220","text":"221"},{"range":"222","text":"219"},"Update the dependencies array to be: [getData, props]",{"range":"223","text":"224"},{"range":"225","text":"219"},{"range":"226","text":"221"},"Update the dependencies array to be: [getCommentsData]",{"range":"227","text":"228"},{"range":"229","text":"219"},{"range":"230","text":"221"},[2685,2687],"[props]",[2735,2743],"[change, getData, props]",[3669,3671],[638,640],"[getData, props]",[1522,1524],[3263,3271],[4214,4216],"[getCommentsData]",[1663,1665],[3364,3372]]