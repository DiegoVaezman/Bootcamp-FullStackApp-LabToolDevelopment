{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\OneDrive\\\\Escritorio\\\\Let's_Coder\\\\project3\\\\my-app\\\\src\\\\components\\\\requestsSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Redirect, Link, Route, Switch } from 'react-router-dom';\nimport Modal from \"./modal\";\nimport ModalResponse from './modalResponse';\nimport SuccessResponse from \"./successResponse\";\nimport ErrorResponse from \"./errorResponse\";\nimport ProductListItem from './productListItem';\nimport apiURL from '../services/apiURL';\nimport RequestsListItem from './requestsListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RequestsSection() {\n  _s();\n\n  //CONSIGUIENDO LAS DATAS DE PEDIDOS SEGÚN ESTADO DESDE DB\n  const [dataNewRequests, setDataNewRequests] = useState([]);\n  const [dataValidatedRequests, setdataValidatedRequests] = useState([]);\n  const [dataReceivedRequests, setdataReceivedRequests] = useState([]);\n  const [dataAllRequests, setdataAllRequests] = useState([]);\n\n  async function getData() {\n    //waiting\n    const dataNew = await axios.get(`${apiURL}order/waiting`);\n    setDataNewRequests(dataNew.data); //validated\n\n    const dataValidated = await axios.get(`${apiURL}order/validated`);\n    setdataValidatedRequests(dataValidated.data); //received\n\n    const dataReceived = await axios.get(`${apiURL}order/received`);\n    setdataReceivedRequests(dataReceived.data); //all\n\n    const dataAll = await axios.get(`${apiURL}order/`);\n    setdataAllRequests(dataAll.data);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []); //ELIGIENDO QUE LISTA MOSTRAR\n\n  const [selectedList, setSelectedList] = useState({\n    new: true,\n    validate: false,\n    received: false,\n    all: false\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Validated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Received\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), selectedList.new === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataNewRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 45\n    }, this), selectedList.validated === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataValidatedRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 51\n    }, this), selectedList.received === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataReceivedRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 50\n    }, this), selectedList.all === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataAllRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/products\",\n        children: \"Add new request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestsSection, \"ScP3eZjWC9lCkMQo4CG4latobHQ=\");\n\n_c = RequestsSection;\nexport default RequestsSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestsSection\");","map":{"version":3,"sources":["C:/Users/diego/OneDrive/Escritorio/Let's_Coder/project3/my-app/src/components/requestsSection.js"],"names":["React","axios","useState","useEffect","Redirect","Link","Route","Switch","Modal","ModalResponse","SuccessResponse","ErrorResponse","ProductListItem","apiURL","RequestsListItem","RequestsSection","dataNewRequests","setDataNewRequests","dataValidatedRequests","setdataValidatedRequests","dataReceivedRequests","setdataReceivedRequests","dataAllRequests","setdataAllRequests","getData","dataNew","get","data","dataValidated","dataReceived","dataAll","selectedList","setSelectedList","new","validate","received","all","map","item","index","validated"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport {Redirect, Link, Route, Switch} from 'react-router-dom'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\"\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport ProductListItem from './productListItem'\r\nimport apiURL from '../services/apiURL'\r\nimport RequestsListItem from './requestsListItem'\r\n\r\nfunction RequestsSection() {\r\n\r\n    //CONSIGUIENDO LAS DATAS DE PEDIDOS SEGÚN ESTADO DESDE DB\r\n    const [dataNewRequests, setDataNewRequests] = useState([])\r\n    const [dataValidatedRequests, setdataValidatedRequests] = useState([])\r\n    const [dataReceivedRequests, setdataReceivedRequests] = useState([])\r\n    const [dataAllRequests, setdataAllRequests] = useState([])\r\n\r\n    async function getData() {\r\n    //waiting\r\n    \r\n        const dataNew = await axios.get(`${apiURL}order/waiting`);\r\n        setDataNewRequests(dataNew.data)\r\n//validated\r\n        const dataValidated = await axios.get(`${apiURL}order/validated`);\r\n        setdataValidatedRequests(dataValidated.data)\r\n//received\r\n        const dataReceived = await axios.get(`${apiURL}order/received`);\r\n        setdataReceivedRequests(dataReceived.data)\r\n//all\r\n        const dataAll = await axios.get(`${apiURL}order/`);\r\n        setdataAllRequests(dataAll.data)\r\n\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    },[])\r\n\r\n\r\n    //ELIGIENDO QUE LISTA MOSTRAR\r\n    const [selectedList, setSelectedList] = useState({\r\n        new: true,\r\n        validate: false,\r\n        received: false,\r\n        all: false\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button>New</button>\r\n                <button>Validated</button>\r\n                <button>Received</button>\r\n                <button>All</button>\r\n            </div>\r\n            {/* <Switch >\r\n            <Route path=\"requests/newrequests\"> */}\r\n            {(selectedList.new === true) && <div className=\"list\">\r\n                {dataNewRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            \r\n            {/* </Route>\r\n            <Route path=\"requests/validatedrequests\"> */}\r\n            {(selectedList.validated === true) && <div className=\"list\">\r\n                {dataValidatedRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            <Route path=\"requests/receivedrequests\"> */}\r\n            {(selectedList.received === true) && <div className=\"list\">\r\n                {dataReceivedRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            <Route path=\"requests/allrequests\"> */}\r\n            {(selectedList.all === true) && <div className=\"list\">\r\n                {dataAllRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            </Switch> */}\r\n            <div>\r\n                <img></img>\r\n                <Link to=\"/products\">Add new request</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsSection"]},"metadata":{},"sourceType":"module"}