{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\OneDrive\\\\Escritorio\\\\Let's_Coder\\\\project3\\\\my-app\\\\src\\\\components\\\\requestsSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Redirect, Link, Route, Switch } from 'react-router-dom';\nimport Modal from \"./modal\";\nimport ModalResponse from './modalResponse';\nimport SuccessResponse from \"./successResponse\";\nimport ErrorResponse from \"./errorResponse\";\nimport ProductListItem from './productListItem';\nimport apiURL from '../services/apiURL';\nimport RequestsListItem from './requestsListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RequestsSection() {\n  _s();\n\n  //CONSIGUIENDO LAS DATAS DE PEDIDOS SEGÃšN ESTADO DESDE DB\n  const [dataNewRequests, setDataNewRequests] = useState([]);\n  const [dataValidatedRequests, setdataValidatedRequests] = useState([]);\n  const [dataReceivedRequests, setdataReceivedRequests] = useState([]);\n  const [dataAllRequests, setdataAllRequests] = useState([]);\n\n  async function getData() {\n    //waiting\n    const dataNew = await axios.get(`${apiURL}order/waiting`);\n    setDataNewRequests(dataNew.data); //validated\n\n    const dataValidated = await axios.get(`${apiURL}order/validated`);\n    setdataValidatedRequests(dataValidated.data);\n    console.log(dataValidatedRequests); //received\n\n    const dataReceived = await axios.get(`${apiURL}order/received`);\n    setdataReceivedRequests(dataReceived.data); //all\n\n    const dataAll = await axios.get(`${apiURL}order/`);\n    setdataAllRequests(dataAll.data);\n  }\n\n  useEffect(() => {\n    getData().then(res => {\n      console.log(res);\n    }); //     setResponse({...response,\n    //         success: true,\n    //         msg: `${res.data.name} has been added to the product list!`\n    //     })\n    //     openResponseModal()\n    //     getData()\n    // })\n    // .catch(error => {\n    //     console.log(error)\n    //     console.log(\"hay un error\")\n    //     setResponse({...response,\n    //         error: true,\n    //         msg: error.response.data\n    //     })\n    //     openResponseModal()\n    // });\n  }, []); //ELIGIENDO QUE LISTA MOSTRAR\n\n  const [selectedList, setSelectedList] = useState({\n    new: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedList({\n          new: true\n        }),\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedList({\n          validated: true\n        }),\n        children: \"Validated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedList({\n          received: true\n        }),\n        children: \"Received\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedList({\n          all: true\n        }),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), selectedList.new === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataNewRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }, this), selectedList.validated === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataValidatedRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 51\n    }, this), selectedList.received === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataReceivedRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 50\n    }, this), selectedList.all === true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: dataAllRequests.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(RequestsListItem, {\n          order: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/products\",\n        children: \"Add new request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RequestsSection, \"Wn98fN77cP90Wk9VeTSALJad1P4=\");\n\n_c = RequestsSection;\nexport default RequestsSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestsSection\");","map":{"version":3,"sources":["C:/Users/diego/OneDrive/Escritorio/Let's_Coder/project3/my-app/src/components/requestsSection.js"],"names":["React","axios","useState","useEffect","Redirect","Link","Route","Switch","Modal","ModalResponse","SuccessResponse","ErrorResponse","ProductListItem","apiURL","RequestsListItem","RequestsSection","dataNewRequests","setDataNewRequests","dataValidatedRequests","setdataValidatedRequests","dataReceivedRequests","setdataReceivedRequests","dataAllRequests","setdataAllRequests","getData","dataNew","get","data","dataValidated","console","log","dataReceived","dataAll","then","res","selectedList","setSelectedList","new","validated","received","all","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {useState, useEffect} from 'react'\r\nimport {Redirect, Link, Route, Switch} from 'react-router-dom'\r\nimport Modal from \"./modal\"\r\nimport ModalResponse from './modalResponse';\r\nimport SuccessResponse from \"./successResponse\"\r\nimport ErrorResponse from \"./errorResponse\"\r\nimport ProductListItem from './productListItem'\r\nimport apiURL from '../services/apiURL'\r\nimport RequestsListItem from './requestsListItem'\r\n\r\nfunction RequestsSection() {\r\n\r\n    //CONSIGUIENDO LAS DATAS DE PEDIDOS SEGÃšN ESTADO DESDE DB\r\n    const [dataNewRequests, setDataNewRequests] = useState([])\r\n    const [dataValidatedRequests, setdataValidatedRequests] = useState([])\r\n    const [dataReceivedRequests, setdataReceivedRequests] = useState([])\r\n    const [dataAllRequests, setdataAllRequests] = useState([])\r\n\r\n    async function getData() {\r\n    //waiting\r\n    \r\n        const dataNew = await axios.get(`${apiURL}order/waiting`);\r\n        setDataNewRequests(dataNew.data)\r\n//validated\r\n        const dataValidated = await axios.get(`${apiURL}order/validated`);\r\n        setdataValidatedRequests(dataValidated.data)\r\n        console.log(dataValidatedRequests)\r\n//received\r\n        const dataReceived = await axios.get(`${apiURL}order/received`);\r\n        setdataReceivedRequests(dataReceived.data)\r\n//all\r\n        const dataAll = await axios.get(`${apiURL}order/`);\r\n        setdataAllRequests(dataAll.data)\r\n\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n        .then(res => {\r\n\r\n            console.log(res)\r\n        })\r\n        //     setResponse({...response,\r\n        //         success: true,\r\n        //         msg: `${res.data.name} has been added to the product list!`\r\n        //     })\r\n        //     openResponseModal()\r\n        //     getData()\r\n        // })\r\n        // .catch(error => {\r\n        //     console.log(error)\r\n        //     console.log(\"hay un error\")\r\n        //     setResponse({...response,\r\n        //         error: true,\r\n        //         msg: error.response.data\r\n        //     })\r\n        //     openResponseModal()\r\n        // });\r\n\r\n\r\n    },[])\r\n\r\n\r\n    //ELIGIENDO QUE LISTA MOSTRAR\r\n    const [selectedList, setSelectedList] = useState({\r\n        new: true\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <button onClick={() => setSelectedList({new : true})}>New</button>\r\n                <button onClick={() => setSelectedList({validated : true})}>Validated</button>\r\n                <button onClick={() => setSelectedList({received : true})}>Received</button>\r\n                <button onClick={() => setSelectedList({all : true})}>All</button>\r\n            </div>\r\n            {/* <Switch >\r\n            <Route path=\"requests/newrequests\"> */}\r\n            {(selectedList.new === true) && <div className=\"list\">\r\n                {dataNewRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            \r\n            {/* </Route>\r\n            <Route path=\"requests/validatedrequests\"> */}\r\n            {(selectedList.validated === true) && <div className=\"list\">\r\n                {dataValidatedRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            <Route path=\"requests/receivedrequests\"> */}\r\n            {(selectedList.received === true) && <div className=\"list\">\r\n                {dataReceivedRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            <Route path=\"requests/allrequests\"> */}\r\n            {(selectedList.all === true) && <div className=\"list\">\r\n                {dataAllRequests.map((item, index) => {\r\n                    return <RequestsListItem order={item} key={index} />\r\n                })}\r\n            </div>}\r\n            {/* </Route>\r\n            </Switch> */}\r\n            <div>\r\n                <img></img>\r\n                <Link to=\"/products\">Add new request</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsSection"]},"metadata":{},"sourceType":"module"}